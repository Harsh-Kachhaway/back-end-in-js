// Generated by CoffeeScript 1.9.3

/*
 * @author  Argi Karunia <https://github.com/hkyo89>
 * @author  Originally by Teddy Hong <https://github.com/teddyhong>
 * @link    https://github.com/tokopedia/nodame
 * @license http://opensource.org/licenses/MIT
 *
 * @version 1.0.0
 */

(function() {
  var DateParser;

  DateParser = (function() {
    function DateParser() {}

    DateParser.prototype.toDate = function(time, format) {
      var day, hour, min, month, result, temp, year;
      if (format == null) {
        format = '';
      }
      if (time != null) {
        if (format === 'dd-mm-yyyy') {
          temp = time.split('-');
          time = "" + temp[2] + temp[1] + temp[0];
        }
        time = String(time);
        year = time.substring(0, 4);
        month = time.substring(4, 6) - 1;
        day = time.substring(6, 8);
        hour = time.substring(8, 10);
        min = time.substring(10, 12);
        result = new Date(year, month, day, hour, min);
        if (result !== 'Invalid Date') {
          return result;
        } else {
          return false;
        }
      }
    };

    DateParser.prototype.toString = function(date_str, format) {
      var _date, format_date, lead_zero, months, replace_date, weekdays;
      if (format == null) {
        format = 'normal';
      }
      _date = new Date(date_str);
      weekdays = {
        Sun: 'Minggu',
        Mon: 'Senin',
        Tue: 'Selasa',
        Wed: 'Rabu',
        Thu: 'Kamis',
        Fri: 'Jumat',
        Sat: 'Sabtu'
      };
      months = {
        Jan: {
          word: 'Januari',
          num: 1
        },
        Feb: {
          word: 'Februari',
          num: 2
        },
        Mar: {
          word: 'Maret',
          num: 3
        },
        Apr: {
          word: 'April',
          num: 4
        },
        May: {
          word: 'Mei',
          num: 5
        },
        Jun: {
          word: 'Juni',
          num: 6
        },
        Jul: {
          word: 'Juli',
          num: 7
        },
        Aug: {
          word: 'Agustus',
          num: 8
        },
        Sep: {
          word: 'September',
          num: 9
        },
        Oct: {
          word: 'Oktober',
          num: 10
        },
        Nov: {
          word: 'November',
          num: 11
        },
        Dec: {
          word: 'Desember',
          num: 12
        }
      };
      lead_zero = function(num) {
        return ('0' + num).slice(-2);
      };
      format_date = function(match, $1, $2, $3, $4, offset, original) {
        var result;
        switch (format) {
          case 'normal':
            result = weekdays[$1] + ", " + $3 + " " + months[$2].word + " " + $4;
            break;
          case 'short':
            result = (lead_zero($3)) + "/" + $2 + "/" + $4;
        }
        return result;
      };
      replace_date = function() {
        var re;
        re = /^([a-z]{1,3}) ([a-z]{1,3}) ([0-9]{1,2}) ([0-9]{1,4}) ([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}) GMT([-+][0-9]{1,4}) (\([a-z]+\))$/i;
        return _date.toString().replace(re, format_date);
      };
      return replace_date();
    };

    DateParser.prototype.parseString = function(time) {
      var day, month, year;
      if (time instanceof Date) {
        year = time.getFullYear();
        month = ("0" + (time.getMonth() + 1)).slice(-2);
        day = ("0" + (time.getDate())).slice(-2);
        return "" + year + month + day;
      } else {
        return false;
      }
    };

    DateParser.prototype.calculateAge = function(birthday) {
      var ageDate, ageDifMs;
      ageDifMs = Date.now() - birthday.getTime();
      if (ageDifMs < 0) {
        return -1;
      }
      ageDate = new Date(ageDifMs);
      return Math.abs(ageDate.getUTCFullYear() - 1970);
    };

    DateParser.prototype.getOptDate = function() {
      var day, j, results;
      results = [];
      for (day = j = 1; j <= 31; day = ++j) {
        results.push(day);
      }
      return results;
    };

    DateParser.prototype.getOptMonth = function() {
      var i, j, len, month, months, results;
      months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
      results = [];
      for (i = j = 0, len = months.length; j < len; i = ++j) {
        month = months[i];
        results.push({
          name: month,
          value: i + 1
        });
      }
      return results;
    };

    DateParser.prototype.getOptYear = function(totalYear, start) {
      var currentYear, endYear, j, ref, ref1, results, startYear, year;
      if (totalYear == null) {
        totalYear = 20;
      }
      if (start == null) {
        start = 0;
      }
      currentYear = new Date().getFullYear();
      endYear = currentYear + start;
      startYear = endYear - totalYear;
      results = [];
      for (year = j = ref = startYear, ref1 = endYear; ref <= ref1 ? j <= ref1 : j >= ref1; year = ref <= ref1 ? ++j : --j) {
        results.push(year);
      }
      return results;
    };

    return DateParser;

  })();

  module.exports = new DateParser();

}).call(this);
